//------------------------------------------------------------------------------
// Header section css (\src\styles\modules\header.scss)
//------------------------------------------------------------------------------
// The header section includes the header bar and the message bar
//------------------------------------------------------------------------------
// TODOs:
//  - Figure out which CSS property names need a prefix.
//  - Figure out which prefixes we should use.  (moz ms webkit spec)
//  - Use mixin prefix where typography (fonts) are defined.
//  - Change "site-header" references to "header" ("footer" vs. "site-footer").
//------------------------------------------------------------------------------

// Header ----------------------------------------------------------------------
//  - The header is the rectangular area that runs across the top of all pages.
//  - The purpose of the header is to promote the brand, to provide global
//    navigation, and to provide general announcements.
//  - The header is made up of the following elements:
//      - Header Bar - shows the brand and offers global navigation elements.
//      - Notification Bar - shows announcements and notifications.
//      - Menu Drawer - a sliding menu for small screens.
//      - Search Drawer - a sliding search bar for small screens.
//  - The header elements are constructed as follows:
//      - Header - a container element for all header elements.
//      - Header Bar - a flex container with three items (left, center, right).
//      - Notification Bar - a div.
//      - Menu drawer - a div that is assigned state & transition classes,
//        and js hooks to toggle those classes, making it move on/off screen.
//      - Search drawer - a div that is assigned state & transition classes,
//        and js hooks to toggle those classes, making it move on/off screen.
//  - The Header bar is affixed to the top of the page via "position: fixed;".
//      - There is a hack in place to fill the gap left when the header element
//        is removed from the flow of the page by giving it a fixed position.
//      - "position: sticky;" would not do exactly what we want because it
//        would need the header to sit within an element that includes all
//        scrollable content on the page.
//  - The "left", "center", and "right" flex items are visible by default.
//      - All items are laid out in a row in their named positions.
//      - All items are vertically-aligned along their centers.
//      - The container is set to nowrap to force all items into 1 line.
//      - The content in each item is aligned with that item's name:
//          - left => left-aligned contentt
//          - center => centered content
//          - right => right-aligned content
//      - To ensure the center flex item is always centered, regardless of the
//        content in the left or right flex items:
//          - The left and right items are 50% wide, forcing them to "push"
//            into the center item and squeezing it.
//          - The center item has "flex-shrink: 0;" so it doesn't shrink and
//            pushes against the left and right flex items with its content.
//  - Sliding menus are implemented as follows:
//      - The drawers are styled as desired.
//      - A transition layout style is constructed (e.g. ".l-left-sliding")
//        that defines the default transition state (e.g. hidden) and
//        defines transition effects.
//      - A transition style is constructed (e.g. ".t-slide") that defines the
//        target transition state (e.g. visible).
//      - A javascript snippet is written tho toggle the action style on the
//        intended drawer (e.g. $(".menu-drawer").classToggle(".t-slide"); ).
//------------------------------------------------------------------------------
// TODOs:
//  - There is a hack in place to fill the gap left when the header element
//    is removed from the flow of the page by giving it a fixed position.
//    This gap is filled by adding a margin-top to the notification bar.
//    Remove this hack.  Somehow.  When the tools exist.
//------------------------------------------------------------------------------

/* DEBUG **********************************************************************/
/*
._header { border: solid 1px black; background: orange; }
._header ._header-bar { border: solid 1px yellow; }
._header ._header-bar > .left { border: solid 1px blue; }
._header ._header-bar > .center { border: solid 1px green; }
._header ._header-bar > .right { border: solid 1px purple; }
._header > .menu-drawer { border: solid 1px purple; }
._header > .search-drawer { border: solid 1px pink; }
._header > .notification-bar { border: solid 1px yellow; background: lightgray; }
/******************************************************************************/

// Navigation Bar
._navigation-bar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%; //DEBUG: width: 80%; left: 10%; //SHIP: width: 100%;
  background-color: ivory;
}
._row-container {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  padding: 0.5em;
}
._row-container > ._left-slot {
  order: 0;
  width: 50%;
  text-align: left;
  white-space: nowrap;
}
._row-container > ._center-slot {
  order: 1;
  flex-shrink: 0;
  text-align: center;
  white-space: nowrap;
}
._row-container > ._right-slot {
  order: 2;
  width: 50%;
  text-align: right;
  white-space: nowrap;
}

._logo {
  font-size: 3.0rem;
  color: black;
 }

header button {
  color: #333;
  background-color: #fff;
  border:solid 1px #ccc;
}
header button:hover {
  color: #1a1a1a; // darken(#333, 10%)
  background-color: #e6e6e6; // darken(#fff, 10%)
  border-color: #b3b3b3; // darken(#ccc, 10%)
}

// Notification Bar
._notification-bar {
  margin-top: 4.2rem; // hack: fill space left by navbar's "position: fixed;"
  background-color: lightgray;
  text-align: center;
}

// Menu Drawer
._menu-drawer {
  text-align: left;
  background: inherit;
}

// Search Drawer
._search-drawer {
  text-align: center;
  background: inherit;
}

// Layout States ("l-") and Transitions ("t-")
._l-left-sliding {
  position: absolute;
  width: 50%;
  left: -50%;
  transition: left 0.2s linear;
}
._l-left-sliding._t-slide {
  left: 0;
}

._l-overlay {
  position: fixed;
  background: green;
  width: 0;
  height: 0;
  opacity: 0.2;
  transition: all 0.2s linear;
}
._l-overlay._t-slide {
  width: 100%;
  height: 100%;
}

._l-top-sliding {
  overflow: hidden;
  height: 0;
  transition: height 0.2s linear;
}
._l-top-sliding._t-slide {
  height: 30px;
}

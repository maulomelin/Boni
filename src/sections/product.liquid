{% comment %}
TODOs:
  - Support ARIA (https://www.w3.org/WAI/tutorials/forms/labels/, https://www.w3.org/TR/wai-aria-practices/#radiobutton).
  - Support Semantic Tags.
  - Implement Microdata fields for Google [and Bing].
  - Support for "no-js".
  - Set min and max on all input fields.
  - Review customizations supported by Shopify themes (https://help.shopify.com/themes/customization/).
      - Add breadcrumbs (https://help.shopify.com/themes/customization/navigation/add-breadcrumbs).
      - Add a back-to-the-top button (https://help.shopify.com/themes/customization/store/add-back-to-top-button).
  - Review specific implementation details (https://help.shopify.com/themes/development/)
      - Select fonts from Shopify's font library (https://help.shopify.com/themes/development/fonts/library).
      - Allow custom Liquid, CSS, and Javascript files to use values from theme settings (https://help.shopify.com/themes/development/theme-editor/other-theme-files).
  - Outline editorial guidelines (e.g. "add to cart" vs. "Add to cart" vs. "Add to Cart" vs. "Add To Cart" vs. "ADD TO CART").
  - Style input controls (e.g. checkboxes, radio buttons, etc.) to have their entire region around the control and label select that control (https://ux.stackexchange.com/questions/23552/should-the-space-between-the-checkbox-and-label-be-clickable).
  - Populate text input cells (http://steadicat.github.io/labels/).
  - Structure forms correctly (https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/How_to_structure_an_HTML_form).
  - Do we design the selection of colors different from that of sizes?  (e.g. dropdowns & buttons vs. buttons & buttons vs. list & buttons vs. etc.)?
  - Figure out how to use the whitespace filter to get all controls, sections, snippets, and any html to render nicely tabbed.
  - Design a "Recommended Products" section on all product details pages (https://help.shopify.com/themes/customization/products/features/recommend-related-products).
  - Implement CSS for ._select-field.
  - Add dynamic checkout buttons and skip the cart page (i.e. "Buy Now" or "Buy with ApplePay" or "Buy with PayPal" or "Buty with amazon pay").
  - Add logic and visuals to indicate when a variant is not available (not just the button label).
  - Enable/disable unavailable color/size selectors.
      - Add logic to figure out when a product is shown.
      - Add visual elements (e.g. gray out any single option selectors not available).
  - Place the image gallery inside a <section> element, or the more appropriate one.
  - Find a more elegant solution to close off the image gallery than a trailing filler <div>.
  - JSDoc everything.
  - Enable deep-linking into variants on the ProductDetails page, so we can highlight specific ones on other parts of the site or outside (https://www.shopify.com/partners/blog/product-variants/).
{% endcomment %}

<!-- product section (\src\sections\product.liquid) -->
<div data-section-id="{{ section.id }}" data-section-type="product" data-enable-history-state="true" itemscope itemtype="http://schema.org/Product">

  {% form "product", product, class: "_form" %}

  <!-- HEADING -->
    <h3>{{ product.title }}</h3>
    <p>by {{ product.vendor }}</p>
  <!-- /HEADING -->

  <!-- PRODUCTSELECT -->
    <fieldset class="no-js _select-field">
      <legend class="_field-label">Product SELECTOR</legend>
      <select data-product-select name="id">{% for variant in product.variants %}
        <option value="{{ variant.id }}" {%- if variant == product.selected_or_first_available_variant %} {{ "selected" -}} {% endif -%} {%- unless variant.available %} {{ "disabled" -}} {% endunless -%}>
          {{- variant.id }} - {{ variant.title }} - {{ variant.price | money }} {%- if variant == product.selected_or_first_available_variant %} {{ "[*]" -}} {% endif -%}
        </option>
        {%- endfor %}
      </select>
    </fieldset>
  <!-- /PRODUCTSELECT -->

  <!-- SINGLEOPTIONSELECTORS -->
    {%- unless product.has_only_default_variant -%}
    {%- for option in product.options_with_values %}
    <fieldset class="js _switch-field">
      <legend class="_field-label">{{ option.name }} SELECTOR</legend>
      <div class="_switches">
        {%- for value in option.values %}
        <div class="_switch _{{ option.name | downcase }}-{{ value | downcase }}" _tooltip="{{ value }}" _tooltip-position="bottom">
          {% capture refid -%}
            _refid-{{ option.name | downcase }}-{{ forloop.index0 -}}
          {% endcapture -%}
          <input data-single-option-selector data-index="option{{ option.position }}" id="{{ refid }}" type="radio" name="{{ option.name }}" value="{{ value }}" {%- if option.selected_value == value %} {{ "checked" -}} {% endif %}>
          <label for="{{ refid }}" class="_switch-label">{{ value }}</label>
        </div>
        {%- endfor %}
      </div>
    </fieldset>
    {%- endfor -%}
    {%- endunless -%}
  <!-- /SINGLEOPTIONSELECTORS -->

  <!-- QUANTITYSELECT -->
    <fieldset class="_XXX-field">
      <legend class="_field-label">Quantity SELECTOR</legend>
      <select name="quantity">
        <option value="1" selected>1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
      </select>
    </fieldset>
  <!-- /QUANTITYSELECT -->

  <!-- PRICINGINFO -->
    <div data-price-wrapper>
      {% assign current_variant = product.selected_or_first_available_variant -%}
      PRICE:
      <span data-product-price>
        {{ current_variant.price | money }}
      </span>
      <span data-compare-text>
        (WAS: <s data-compare-price>{% if current_variant.price < current_variant.compare_at_price -%} {{- current_variant.compare_at_price | money -}} {%- endif %}</s>)
        <!-- "WAS" string above should be replaced with {{ "products.product.regular_price" | t }}: -->
      </span>
    </div>
  <!-- /PRICINGINFO -->

  <!-- DESCRIPTION -->
    <div class="rte">
      {{ product.description }}
    </div>
  <!-- /DESCRIPTION -->

  <!-- ADDTOCARTBUTTON -->
    {% assign current_variant = product.selected_or_first_available_variant -%}
    <button data-add-to-cart type="submit" {%- unless current_variant.available %} {{ "disabled" -}} {% endunless %}>
      <span data-add-to-cart-text>
        {% if current_variant.available %}
          {{ "products.product.add_to_cart" | t }}
        {% else %}
          {{ "products.product.sold_out" | t }}
        {% endif %}
      </span>
    </button>
  <!-- /ADDTOCARTBUTTON -->

  {% endform %}

  <!-- IMAGEGALLERY
  APPROACH:
    - Create a master gallery that has all of the images.
    - Create individual galleries for each option we choose.
    - The code logic determines conditions under which to show/hide galleries.
  TODOs:
    - Insert a <figure> element as a thumbnail, instead of a naked <img> or <a><img></a>.
    - Add a link to the large image, in case javascript breaks, at least users will see the large one.
    - Do we make each color set a gallery?  YES.  Make each color set a gallery.
    - Change this gallery <div> to a <section> with an appropriate role.
  <!---->
  <!-- master gallery -->
  <div class="no-js _gallery" data-gallery-id="all">
    {%- for image in product.images -%}
      {%- include "gallery-figure", image: image, gid: "all", pid: forloop.index0, blast: false -%}
    {%- endfor -%}
    {%- include "gallery-figure", blast: true -%}
  </div>

  <!-- option-based galleries -->
  {% for option in product.options_with_values -%}
    {%- assign current_option_name = option.name | downcase -%}
    {%- if "color" == current_option_name -%}
      {%- for value in option.values -%}
        {%- assign current_color = value | downcase -%}
        {%- assign i = 0 -%}
        <div class="_gallery {%- if option.selected_value != value %} _hide {% endif %}" data-gallery-id="{{ current_color }}">
        {%- for image in product.images -%}
          {%- include "function.image-filename-attribute", image: image, attribute: "primary-color" -%}
          {%- if current_color == image_filename_attribute -%}
            {%- include "gallery-figure", image: image, gid: current_color, pid: i, blast: false -%}
            {%- assign i = i | plus: 1 -%}
          {%- endif -%}
        {%- endfor -%}
        {%- include "gallery-figure", blast: true -%}
        </div>
      {% endfor -%}
    {%- endif -%}
  {%- endfor -%}

  <!-- /IMAGEGALLERY -->

  <!-- IMAGEGALLERYVIEWER
  TODOs:
    - This *must* be outside the <form> container.  Clicking on the next/prev navigational arrows cause a form submit.
    - Does it make sense to implement this as a snippet?
  <!---->
  <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="pswp__bg"></div>
      <div class="pswp__scroll-wrap">
          <div class="pswp__container">
              <div class="pswp__item"></div>
              <div class="pswp__item"></div>
              <div class="pswp__item"></div>
          </div>
          <div class="pswp__ui pswp__ui--hidden">
              <div class="pswp__top-bar">
                  <div class="pswp__counter"></div>
                  <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                  <button class="pswp__button pswp__button--share" title="Share"></button>
                  <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                  <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                  <div class="pswp__preloader">
                      <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                          <div class="pswp__preloader__donut"></div>
                        </div>
                      </div>
                  </div>
              </div>
              <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                  <div class="pswp__share-tooltip"></div>
              </div>
              <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
              <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
              <div class="pswp__caption">
                  <div class="pswp__caption__center"></div>
              </div>
          </div>
      </div>
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe-ui-default.min.js"></script>
  <!-- /IMAGEGALLERYVIEWER -->

  <!-- SOCIAL -->
  {% if section.settings.show_share_buttons %}
    {% include 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product %}
  {% endif %}
  <!-- /SOCIAL -->

  <!-- PRODUCTDATA -->
  {% unless product == empty %}
  <script data-product-json type="application/json">
    {{ product | json }}
  </script>
  {% endunless %}
  <!-- /PRODUCTDATA -->

  <!-- MICRODATA -->
  <!-- TODO -->
  <!-- /MICRODATA -->

<!-- BONI:DEBUG --
  {% include "debug-product-info" %}
<!---->

</div>

<div style="padding: 4rem; background: lightgray; text-align: center;">BOTTOM SPACER</div>

{% schema %}
  {
    "name": "Product pages",
    "settings": [
      {
        "type": "checkbox",
        "id": "show_share_buttons",
        "label": "Show social sharing buttons",
        "default": true
      }
    ]
  }
{% endschema %}
